% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FCnet.R
\name{FCnet}
\alias{FCnet}
\title{Fit an elastic net model with crossvalidated hyperparameters}
\usage{
FCnet(
  y,
  x,
  alpha = seq(0, 1, by = 0.1),
  lambda = rev(10^seq(-5, 5, length.out = 200)),
  nfolds = nrow(x),
  rep_cv = 1,
  fit_stats = F,
  type.measure = optionsFCnet("cv.type.measure"),
  intercept = optionsFCnet("intercept"),
  standardize = optionsFCnet("standardize"),
  ...
)
}
\arguments{
\item{y}{The dependent variable, typically behavioral scores to predict.
This can be a vector or a single data.frame column.}

\item{x}{The independent variables, typically neural measures that have
been already summarised through data reduction techniques
(e.g. ICA, PCA): an object created by \code{reduce_featuresFC()} will do. If such
an object is passed to this function, the "Weights" slot is taken as x.
A list can be passed to this function: in this case the function needs an
entry named "Weights". Otherwise, a data.frame can be passed to x.}

\item{alpha}{Value(s) that bias the elastic net toward ridge regression
(alpha== 0) or LASSO regression (alpha== 1). If a vector of alpha values
is supplied, the value is optimized through crossvalidation.
It defaults to a vector ranging from 0 to 1 with steps of 0.1.
The crossvalidated alpha is returned.}

\item{lambda}{Regularization parameter for the regression,
see \code{glmnet::glmnet()}. Lambda must be a vector with length>1.
When a vector of lambda values is supplied, the value of lambda
is optimized through internal crossvalidation. It defaults to a vector
ranging from 10^-5 to 10^5 with 200 values in logarithmic steps.
The crossvalidated optimal lambda is returned.}

\item{nfolds}{Number of folds to be created in the crossvalidation of alpha
and/or lambda. It defaults to \code{nrow(x)}, that is Leave-One-Out crossvalidation.
It can be set to whatever integer >3 and < nrow(x).}

\item{rep_cv}{Number of times the crossvalidation procedure must be repeated.
It defaults to 1 (as the LOO procedure is deterministic, thus values larger
than 1 are redundant). If rep_cv>1, the crossvalidation is repeated rep_cv
times, and the median crossvalidated alpha and lambda values across all rep_cv
are returned. Useful in order to decrease randomness when kfold crossvalidation
is required. Setting this parameter too high though will result in a mere
approximation of the LOO.}

\item{intercept}{whether to fit (TRUE) or not (FALSE) an intercept to the model.}

\item{standardize}{Whether x must be standardized.
\code{glmnet::glmnet()} the default is FALSE as we assume predictors are already either
summarised with PCA or ICA (and therefore scaled) or drawn from normalized FC matrices.}

\item{...}{Other parameters passed to \code{glmnetUtils::cva.glmnet()} or
\code{glmnet::glmnet()}.}

\item{cv.type.measure}{The measure to minimize in crossvalidation inner loops.
Differently from \code{glmnetUtils::cva.glmnet()} the deafult is the mean absolute error.}
}
\value{
A model produced by \code{glmnet::glmnet()}.
Crossvalidated best alpha and lambda values.
If requested: a vector of observed (y) and predicted (predicted) values;
model's coefficients; goodness of fit statistics.
}
\description{
This function is a wrapper around \code{glmnet::glmnet()}. For extended documentation,
the readers are encouraged to consult the original source.
\code{glmnet::glmnet()} fits a robust linear model through penalized maximum likelihood
computed via the lasso or elastic net regularization path.
\code{FCnet()} requires two objects at minimum: \code{y} is a vector or data.frame
with exactly one column, corresponding to the (behavioral) score to predict; \code{x}
is a data.frame or a list of lists with an entry named "Weights",
which includes the independent variables. \code{x} can be - and is meant to be -
one object created by \code{reduce_featuresFC()}, but this is not strictly necessary.
The final model finds the best hyperparameters through \code{cv_FCnet()}; details of
the crossvalidation procedures can be passed as arguments to \code{FCnet()} if
necessary. Use of this function is not encouraged because crossvalidation and
predictions are made on overlapping sets of observations. A better approach
\itemize{
\item though computationally more demanding - would be to perform \strong{nested} inner
and outer loop, e.g.- via the function \code{FCnetLOO()}.
This is the reason why, in order to evaluate the results of a \code{FCnet()} call
in terms of goodness of fit, such statistics must be required explicitly by
setting \code{fit_stats= T} (sure such statistics can be calculated post-hoc
anyway).
A call to \code{FCnet()} returns a \code{glmnet::glmnet()} model which can be explored
further if necessary.
}
}
